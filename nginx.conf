user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;
    server_tokens off;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/m;

    # Upstream configuration
    upstream api_servers {
        least_conn;
        server web:80 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Security headers (global)
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rss+xml
        image/svg+xml;

    # Brotli compression (if module available)
    # brotli on;
    # brotli_comp_level 6;
    # brotli_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80;
        listen [::]:80;
        server_name localhost _;

        # Security headers for HTTP
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

        # Redirect HTTP to HTTPS in production
        # return 301 https://$server_name$request_uri;

        # Rate limiting
        limit_req zone=api burst=20 nodelay;

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        proxy_http_version 1.1;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 8 8k;

        # Main API routes
        location / {
            proxy_pass http://api_servers;
        }

        # Health check endpoint (no rate limiting)
        location /health {
            proxy_pass http://api_servers/health;
            access_log off;
            limit_req off;
        }

        # Metrics endpoint (protected)
        location /metrics {
            proxy_pass http://api_servers:8090/metrics;
            access_log off;
            # Add IP whitelist for metrics
            # allow 10.0.0.0/8;
            # deny all;
        }

        # API documentation
        location ~ ^/api/v1/(docs|redoc|openapi.json) {
            proxy_pass http://api_servers;
            # Rate limit API docs access
            limit_req zone=api burst=5 nodelay;
        }

        # Auth endpoints (stricter rate limiting)
        location ~ ^/api/v1/auth/(login|register) {
            proxy_pass http://api_servers;
            limit_req zone=login burst=3 nodelay;
        }

        # File uploads
        location /api/v1/files {
            proxy_pass http://api_servers;
            client_max_body_size 100M;
            proxy_request_buffering off;
            proxy_read_timeout 300s;
        }

        # Static files and uploads
        location /uploads/ {
            alias /app/uploads/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }

        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Deny access to sensitive files
        location ~ /\. {
            deny all;
        }

        location ~ \.(env|git|svn|htaccess)$ {
            deny all;
        }

        # Custom error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # HTTPS server configuration (uncomment for production)
    # server {
    #     listen 443 ssl http2;
    #     listen [::]:443 ssl http2;
    #     server_name your-domain.com;
    #
    #     # SSL configuration
    #     ssl_certificate /etc/nginx/ssl/cert.pem;
    #     ssl_certificate_key /etc/nginx/ssl/key.pem;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES128-GCM-SHA256;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     ssl_stapling on;
    #     ssl_stapling_verify on;
    #
    #     # HSTS
    #     add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    #
    #     # Include the same location blocks as HTTP server
    #     # ...
    # }
}
