[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[project]
name = "starlight"
version = "0.1.0"
description = "Enterprise FastAPI REST API Framework"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Starlight Team", email = "team@starlight.dev"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]
dependencies = [
    "fastapi[standard]>=0.116.1",
    "uvicorn[standard]>=0.35.0",
    "gunicorn>=23.0.0",  # Security: CVE-2024-1135, CVE-2024-6827
    "pydantic>=2.10.0",
    "pydantic-settings>=2.10.1",
    "sqlalchemy>=2.0.42",
    "alembic>=1.16.4",
    "asyncpg>=0.30.0",
    "aiosqlite>=0.20.0",
    "redis>=6.2.0",
    "celery[redis]>=5.5.3",
    "flower>=2.0.1",
    "python-jose[cryptography]>=3.4.0",  # Security: CVE-2024-33663, CVE-2024-33664
    "python-multipart>=0.0.18",  # Security: CVE-2024-24762, CVE-2024-53981
    "passlib[bcrypt]>=1.7.4",
    "email-validator>=2.2.0",
    "python-decouple>=3.8",
    "structlog>=24.4.0",
    "orjson>=3.11.1",
    "httpx>=0.28.0",
    "prometheus-client>=0.21.1",
    "opentelemetry-api>=1.28.2",
    "opentelemetry-sdk>=1.28.2",
    "opentelemetry-instrumentation-fastapi>=0.49b2",
    "opentelemetry-instrumentation-sqlalchemy>=0.49b2",
    "sentry-sdk[fastapi]>=2.8.0",  # Security: CVE-2024-40647
    "authlib>=1.3.2",
    "itsdangerous>=2.2.0",
    "pillow>=11.3.0",
    "aiofiles>=24.1.0",
    "boto3>=1.35.0",
    "pip-audit>=2.6.1",
    "jinja2>=3.1.6",  # Security: CVE-2024-22195, CVE-2024-34064, CVE-2024-56326, CVE-2024-56201, CVE-2025-27516
    "starlette>=0.47.2",  # Security: CVE-2024-47874, CVE-2025-54121
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.0.0",
    "httpx>=0.28.0",
    "factory-boy>=3.3.1",
    "faker>=32.2.0",
    "ruff>=0.8.4",
    "mypy>=1.13.0",
    "black>=24.10.0",
    "isort>=5.13.2",
    "pre-commit>=4.0.1",
    "bandit>=1.8.0",
    "safety>=3.6.0",
    "pip-audit>=2.6.1",
]
test = [
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.0.0",
    "httpx>=0.28.0",
    "factory-boy>=3.3.1",
    "faker>=32.2.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.5.45",
    "mkdocstrings[python]>=0.27.2",
    "mkdocs-gen-files>=0.5.0",
    "mkdocs-literate-nav>=0.6.1",
    "mkdocs-section-index>=0.3.9",
]
production = [
    "newrelic>=9.0.0",
    "datadog>=0.50.0",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
skip-string-normalization = true
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | \venv
  | \.eggs
  | \.blue
  | \.terraform
  | \env
  | \build
  | __pycache__
)'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
show_error_codes = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.bandit]
skips = ["B101", "B601"]
exclude_dirs = ["tests", "venv", ".venv"]

[tool.bandit.assert_used]
skips = ["*_test.py", "test_*.py"]

[tool.pip-audit]
require-hashes = false
local = true
format = "json"
output = "pip-audit-report.json"
ignore-vulns = []

[tool.safety]
full-report = true
short-report = false
ignore = []
output = "json"
